openapi: 3.0.0
info:
  title: FNB API
  description: >
    **API for managing products with Swagger**

    Developed by **tn823**
  version: 1.0.0
  contact:
    name: Nguyễn Trọng Nghĩa
    url: https://github.com/tn823
    email: trnghia823@gmail.com
servers:
  - url: http://localhost:3000

tags:
  - name: Product
    description: Everything about your Products
  - name: Category
    description: Product Category

paths:
  /api/getProducts:
    get:
      tags:
        - Product
      summary: Get all products
      responses:
        "200":
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/getProducts/{id}:
    get:
      summary: Get product by ID
      tags:
        - Product
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the product to get
      responses:
        '200':
          description: Thành công
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/products/{name}:
    get:
      summary: Get product by name
      tags:
        - Product
      parameters:
        - in: path
          name: name
          required: true
          schema:
            type: string
          description: The name of the product to get
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/getProducts/category/{categoryId}:
    get:
      summary: Get products by category ID
      tags:
        - Product
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: integer
          description: The ID of the category to get products for
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "404":
          description: No products found in this category
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/addProduct:
    post:
      tags:
        - Product
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductInput"
      responses:
        "201":
          description: The created product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/deleteProduct/{id}:
    delete:
      tags:
        - Product
      summary: Delete a product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the product to delete
      responses:
        "200":
          description: Product deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/updateProduct/{id}:
    put:
      tags:
        - Product
      summary: Update a product by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the product to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductInput"
      responses:
        "200":
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        "404":
          description: Product not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /api/getCategories:
    get:
      summary: Get all category name
      tags:
        - Category
      responses:
        '200':
          description: Thành công
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/addCategory:
    post:
      tags:
        - Category
      summary: Create a new category
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryInput'
      responses:
        '201':
          description: The created category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/deleteCategory/{id}:
    delete:
      tags:
        - Category
      summary: Delete a category by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the category to delete
      responses:
        '200':
          description: Category deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/updateCategory/{id}:
    put:
      tags:
        - Category
      summary: Update a category by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The ID of the category to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryInput'
      responses:
        '200':
          description: Category updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Product:
      type: object
      properties:
        product_id:
          type: integer
          description: ID của sản phẩm
        name:
          type: string
        description:
          type: string
        price:
          type: number
        category_id:
          type: integer
        img:
          type: string
      example:
        product_id: 1
        name: Example Product
        description: This is an example product
        price: 100.0
        category_id: 1
        img: https://example.com/product.jpg

    ProductInput:
      type: object
      required:
        - name
        - description
        - price
        - category_id
        - img
      properties:
        name:
          type: string
        description:
          type: string
        price:
          type: number
        category_id:
          type: integer
        img:
          type: string
      example:
        name: Example Product
        description: This is an example product
        price: 100.0
        category_id: 1
        img: https://example.com/product.jpg

    Category:
      type: object
      properties:
        category_id:
          type: integer
          description: ID của danh mục
        name:
          type: string
          description: Tên của danh mục
      example:
        category_id: 1
        name: Example Category

    CategoryInput:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Tên của danh mục
      example:
        name: New Category

    Message:
      type: object
      properties:
        message:
          type: string
      example:
        message: Operation successful

    Error:
      type: object
      properties:
        error:
          type: string
      example:
        error: Operation error